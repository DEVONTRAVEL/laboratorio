generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model protetico {
  id                   String                 @id @default(auto()) @map("_id") @db.ObjectId
  servicoExecucaoEtapa servicoExecucaoEtapa[]
}

model usuario {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  nome  String
  email String @unique
  senha String
}

model servico {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  nome String

  etapa           etapa[]
  clienteServico  clienteServico[]
  servicoExecucao servicoExecucao[]
  clienteEtapa    clienteEtapa[]
}

model dentista {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  nome      String
  clienteId String @db.ObjectId

  cliente          cliente           @relation(references: [id], fields: [clienteId])
  servicoExecutado servicoExecucao[]
}

model etapa {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  nome         String
  valor        Int
  servicoId    String         @db.ObjectId
  clienteEtapa clienteEtapa[]

  servico servico @relation(fields: [servicoId], references: [id])
}

model cliente {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  nome    String
  cpfCnpj String? @default("")

  clienteServico clienteServico[]
  clienteEtapa   clienteEtapa[]
  dentista       dentista[]
}

model servicoExecucao {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  servicoId        String @db.ObjectId
  dentistaId       String @db.ObjectId
  clienteServicoId String @db.ObjectId

  clienteServico       clienteServico         @relation(fields: [clienteServicoId], references: [id])
  servico              servico                @relation(fields: [servicoId], references: [id])
  dentista             dentista               @relation(fields: [dentistaId], references: [id])
  servicoExecucaoEtapa servicoExecucaoEtapa[]
}

model servicoExecucaoEtapa {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  proteticoId        String @db.ObjectId
  clienteEtapaId     String @db.ObjectId
  servicoExecutadoId String @db.ObjectId

  protetico       protetico       @relation(fields: [proteticoId], references: [id])
  clienteEtapa    clienteEtapa    @relation(fields: [clienteEtapaId], references: [id])
  servicoExecucao servicoExecucao @relation(fields: [servicoExecutadoId], references: [id])
}

model clienteEtapa {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  clienteId String @db.ObjectId
  servicoId String @db.ObjectId
  etapaId   String @db.ObjectId

  servico              servico                @relation(fields: [servicoId], references: [id])
  etapa                etapa                  @relation(fields: [etapaId], references: [id])
  cliente              cliente                @relation(fields: [clienteId], references: [id])
  servicoExecucaoEtapa servicoExecucaoEtapa[]
}

model clienteServico {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  clienteId String @db.ObjectId
  servicoId String @db.ObjectId
  valor     Int

  servico         servico           @relation(fields: [servicoId], references: [id])
  cliente         cliente           @relation(fields: [clienteId], references: [id])
  servicoExecucao servicoExecucao[]
}
